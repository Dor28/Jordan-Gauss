Документация к данной программе.

Данная программа решают задачу поиска решений СЛАУ методор Жордана-Гаусса (Йордана-Гаусса)
с выбором главного элемента по столбцу.

Программа состоит из следующих файлов:
  1. main_lss_77_05.c
  2. lss_77_05.c
  3. lss_77_05.h

  Далее пройдемся по списку функций в этих файлах

    int validateFile(char const *filename)
          Описание:
              Функция принимает на вход путь к файлу в виде строки.
          Аргументы:
              char *
          Возвращаемое значение:
              0 - Файл по данному пути существует.
              1 - Такого файла по данному пути не существует.


      int stringLength(char const *input)
            Описание:
                Функция принимает на вход строку и возвращает её длину.
            Аргументы:
                char const *
            Возвращаемое значение:
                unsigned int

     int validateParams(int argc, char **argv)
            Описание:
                Функция принимает на вход количество аргументов переданных в качестве параметра в командной строке и аргументы.
            Возвращаемое значение:
                0 - Валидация прошла успешно и параметры соответствуют условиям.
                1 - Ошибка ввода параметров. Такого флага не существует.
                2 - Ошибка ввода параметров. Данное значение возвращается, в случае, если количество строк воспринимаемых как названия файлов больше 2.


    int read_input(char const *input_file, double** A, double** B, int *n)
        Описание:
            Функция принимает на вход название файла, указатели на матрицы и размер матрицы.
            Выделяет память для них, проверяет входные данные на корректность.
        Аргументы:
            char const *input_file - название файла
            double** A - матрица коэффициентов при неизвестных
            double** B - вектор свободных членов
            int *n - размер матрицы
        Возвращаемое значение:
            0 - Успешно. Функция выделила память, считала нужно количество данных, проверила их на корректность и не выявила ошибок.
            1 - Ошибка. Файл пуст.
            2 - Ошибка. Размер матрицы отрицательный или равен нулю.
            3 - Ошибка. В файле недостаточно данных для решения задачи.
            4 - Ошибка. Один из коеффициентов или один из элементов вектора значений не являются числом.
                        Или размер матрицы не является целым положительным числом.
            5 - Ошибка. В файле недостаточно данных для решения задачи (вектор значений не полон).

    void write_answer(char const *output_file, int n, const double* X, int result)
        Описание:
            Функция принимает на вход выходной файл, размер матрицы, указатель на решение и переменную для обозначения существования ответа.
        Аргументы:
            char const *output_file - название выходного файла
            int n - размер матрицы
            const double* X - массив с решением задачи
            int result - параметр (1, если ответа не существует, иначе - 0)
        Возвращаемое значение:
            Нет

 В файле lss_77_05.c :
  int lss_77_05(int n, double *A, double *B, double *X, double *tmp)
      Описание:
      Функция решают задачу СЛАУ методом Йордана-Гаусса с выбором главного элемента по столбцу
       Аргумента:
        n - размер матрицы системы (матрица квадратная)
        A - матрица системы
        B - вектор свободных членов
        X - вектор ответов
        tmp - неиспользуемая переменная, но обязательная по условию задачи
        Данные аргументы будут справедливы и для следующих далее функций. Далее A = Arr
        Возвращаемые значения:
        0 - успешно. Задача решена, решение существует
        1 - Решения не существует.

   double *getPointerByIndexes(int i, int j, int n, double *Arr)
        Функция возвращает указатель на элемент из Arr размерности n по индексам i, j

   void Swap2Rows (int row_1, int row_2, int n, double *Arr, double *B)
        Функция меняет местами две строки матрицы

   double *MaxElementInColumn(int column, int SearchFrom, int n, double *Arr)
          Функция возвращает указатель на максимальный элемент в столбце column начиная с элемента SearchFrom

   double ModuleGaussIteration(int i, int j, int n, double *Arr, double *B)
        Функция приводит матрицу Arr к верхнетреугольному виду.

     double ReverseGaussIteration(int i, int j, int n, double *Arr, double *B)
             Функция приводит матрицу Arr к виду когда в матрице все элементы нулевые кроме диагольных элементов
     int FindOutRow(double *value, int n, double *Arr)
          Функция возвращает  возвращает номер строки по указателю на элемент

     int checkConsistency(int row,  int n, double *Arr, double *B)
           Функция проверяет все ли элементы в строке нулевые.
           Если все элементы нулевые в матрице Arr нулевые и в векторе B ненулевые то возвращает 3
           Если хотя бы один элемент в матрице больше нуля то возвращает 0

  Коды возвращаемых значений:
  0 - Программа решила задачу и вывела ответ
  1 - Программа решила задачу и вывела, что ответа не существует
  2 - Неправильный синтаксис флагов запуска: слишком много имён файлов
  3 - Неправильный синтаксис флагов запуска: параметр не существует, либо флаг не задан
  4 - Неправильный порядок параметров
  5 - Файл с входными данными отсутствует
  6 - Файл пуст
  7 - Размер матрицы это не положительное целое число
  8 - Недостаточно элементов в матрице или в столбце свободных членов
  9 - Хотя бы один из элементов матрицы или столбца свободных членов не является действительным числом